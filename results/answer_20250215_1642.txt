{'messages': [], 'input': 'how would you store a receipt ?', 'plan': '', 'past_steps': []}
----
{'messages': [], 'input': 'how would you store a receipt ?', 'plan': [Step(task='Explain how to store a receipt in the database.', agent='accountant')], 'past_steps': []}
----
{'messages': [], 'input': 'how would you store a receipt ?', 'plan': [Step(task='Explain how to store a receipt in the database.', agent='accountant')], 'past_steps': [('Explain how to store a receipt in the database.', AIMessage(content='To store a receipt in the database, the following steps are typically followed:\n\n1. **Extract Metadata**: First, gather the necessary metadata about the receipt, such as the filename, description, and type of document (e.g., image, audio, text).\n\n2. **Store Metadata**: Use the metadata to store the receipt information in the database. This includes adding the filename, description, and type.\n\n3. **Retrieve Document ID**: After storing the metadata, retrieve the unique document ID assigned to the receipt.\n\n4. **Add Receipt Data**: Finally, input the actual receipt data into the database, including details like the user, date, type of receipt, items purchased (fruits and vegetables), shop place, and total cost, using the document ID obtained in the previous step.\n\nBy following these steps, the receipt will be properly stored and can be accessed later for reference or analysis.', additional_kwargs={'refusal': None}, response_metadata={'token_usage': {'completion_tokens': 185, 'prompt_tokens': 450, 'total_tokens': 635, 'completion_tokens_details': {'accepted_prediction_tokens': 0, 'audio_tokens': 0, 'reasoning_tokens': 0, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 0}}, 'model_name': 'gpt-4o-mini-2024-07-18', 'system_fingerprint': 'fp_00428b782a', 'finish_reason': 'stop', 'logprobs': None}, id='run-4faba493-ffa0-4d51-86ca-ce5e5184000d-0', usage_metadata={'input_tokens': 450, 'output_tokens': 185, 'total_tokens': 635, 'input_token_details': {'audio': 0, 'cache_read': 0}, 'output_token_details': {'audio': 0, 'reasoning': 0}}))]}
----
{'messages': [], 'input': 'how would you store a receipt ?', 'plan': [Step(task='Explain how to store a receipt in the database.', agent='accountant')], 'past_steps': [('Explain how to store a receipt in the database.', AIMessage(content='To store a receipt in the database, the following steps are typically followed:\n\n1. **Extract Metadata**: First, gather the necessary metadata about the receipt, such as the filename, description, and type of document (e.g., image, audio, text).\n\n2. **Store Metadata**: Use the metadata to store the receipt information in the database. This includes adding the filename, description, and type.\n\n3. **Retrieve Document ID**: After storing the metadata, retrieve the unique document ID assigned to the receipt.\n\n4. **Add Receipt Data**: Finally, input the actual receipt data into the database, including details like the user, date, type of receipt, items purchased (fruits and vegetables), shop place, and total cost, using the document ID obtained in the previous step.\n\nBy following these steps, the receipt will be properly stored and can be accessed later for reference or analysis.', additional_kwargs={'refusal': None}, response_metadata={'token_usage': {'completion_tokens': 185, 'prompt_tokens': 450, 'total_tokens': 635, 'completion_tokens_details': {'accepted_prediction_tokens': 0, 'audio_tokens': 0, 'reasoning_tokens': 0, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 0}}, 'model_name': 'gpt-4o-mini-2024-07-18', 'system_fingerprint': 'fp_00428b782a', 'finish_reason': 'stop', 'logprobs': None}, id='run-4faba493-ffa0-4d51-86ca-ce5e5184000d-0', usage_metadata={'input_tokens': 450, 'output_tokens': 185, 'total_tokens': 635, 'input_token_details': {'audio': 0, 'cache_read': 0}, 'output_token_details': {'audio': 0, 'reasoning': 0}}))], 'response': 'FINISH'}
----
Total Tokens: 2287
Prompt Tokens: 2067
Completion Tokens: 220
Total Cost (USD): $0.0045709999999999995
